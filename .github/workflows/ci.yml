name: CI

on:
  push:
  pull_request:

jobs:
  build-and-test:
    name: Build & Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        toolchain: [stable]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      - name: Cache Docker image
        id: cache-localstack
        uses: actions/cache@v4
        with:
          path: /tmp/.docker-cache
          key: ${{ runner.os }}-localstack-docker-${{ hashFiles('.github/workflows/ci.yml') }}
          restore-keys: |
            ${{ runner.os }}-localstack-docker-

      - name: Load cached Docker image
        run: |
          if [ -f /tmp/.docker-cache/localstack.tar ]; then
            docker load -i /tmp/.docker-cache/localstack.tar
          fi

      - name: Pull LocalStack image (if not cached)
        run: docker pull localstack/localstack:latest

      - name: Save Docker image to cache
        run: |
          mkdir -p /tmp/.docker-cache
          docker save localstack/localstack:latest -o /tmp/.docker-cache/localstack.tar

      - name: Run tests
        run: cargo test --all
